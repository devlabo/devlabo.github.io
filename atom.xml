<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Megapost</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://megapost.io/"/>
  <updated>2020-04-14T00:54:00.020Z</updated>
  <id>https://megapost.io/</id>
  
  <author>
    <name>Deviroid</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SHAHE 디지털 버니어 캘리퍼스</title>
    <link href="https://megapost.io/2020/04/14/SHAHE-digital-vernier-calipers/"/>
    <id>https://megapost.io/2020/04/14/SHAHE-digital-vernier-calipers/</id>
    <published>2020-04-14T00:35:29.000Z</published>
    <updated>2020-04-14T00:54:00.020Z</updated>
    
    <content type="html"><![CDATA[<p>이번에 큰맘먹고 3D프린터를 구매를 해서 물건을 만들때 좀 더 치수를 정확하게 재기 위해서 캘리퍼스를 구매 했습니다.</p><p>인터넷에서 찾아보니 정밀 공구는 중국산 사는거 아니라고 하는데… 그렇다고 일본제품을 사기엔 시국이 그렇고 가격도 만만치 않더라구요.</p><p>그래서 그나마 평도 좋고 가격도 나름 저렴한 SHAHE 디지털 버니어 캘리퍼스를 구매했습니다.</p><p>크기는 150mm, 200mm, 300mm 가 있던데 200mm로 구매 했습니다.</p><p><img src="/images/vc/001.jpg" alt=""></p><p>그래도 포장이 생각보다 고급스러웠습니다. </p><p>저렴한 제품이라곤 해도 그래도 어느정도 가격대가 있긴 한데 나름 만족을 주는 것 같습니다.</p><a id="more"></a><p><img src="/images/vc/002.jpg" alt=""></p><p>국내 정식 수입 제품이라 판매점에서 1년 무상보증도 해줍니다. </p><p><img src="/images/vc/003.jpg" alt=""></p><p>보관용 플라스틱 박스입니다. 수입사 주소도 붙어있어서 AS보내거나 제품 문의를 할때 쉽게 확인할 수 있습니다.</p><p><img src="/images/vc/004.jpg" alt=""></p><p>캘리퍼는 양 끝이 밀봉된 비닐포장이 되어있었습니다.<br>새제품이라는 믿음을 심어주네요 ㅎㅎ</p><p><img src="/images/vc/005.jpg" alt=""></p><p>수치를 확인할 수 있는 액정 화면입니다. 주변으로 ON/OFF, 영점조절, 단위조절 스위치가 보입니다.</p><p><img src="/images/vc/006.jpg" alt=""></p><p>CR2032 배터리 1개를 사용합니다. 기본으로 2개를 제공해줍니다.</p><p><img src="/images/vc/007.jpg" alt=""></p><p>영점조절용 도구인 것 같습니다. 녹쓸지 말라고 구리스가 발라져있어 지저분해보이네요.</p><p><img src="/images/vc/008.jpg" alt=""></p><p>알콜솜으로 깨끗하게 닦아서</p><p><img src="/images/vc/009.jpg" alt=""></p><p>캘리퍼를 이용해 재봅니다.  정확하네요.</p><p>집에서 엄청나게 정밀하게 재는것이 아닌 취미용으로 이정도면 충분한 것 같습니다.</p><p>3D 프린터가 도착하면 첫 작품에 활용해봐야겠습니다.</p><p>이상 개봉기였습니다.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;이번에 큰맘먹고 3D프린터를 구매를 해서 물건을 만들때 좀 더 치수를 정확하게 재기 위해서 캘리퍼스를 구매 했습니다.&lt;/p&gt;
&lt;p&gt;인터넷에서 찾아보니 정밀 공구는 중국산 사는거 아니라고 하는데… 그렇다고 일본제품을 사기엔 시국이 그렇고 가격도 만만치 않더라구요.&lt;/p&gt;
&lt;p&gt;그래서 그나마 평도 좋고 가격도 나름 저렴한 SHAHE 디지털 버니어 캘리퍼스를 구매했습니다.&lt;/p&gt;
&lt;p&gt;크기는 150mm, 200mm, 300mm 가 있던데 200mm로 구매 했습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/vc/001.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;그래도 포장이 생각보다 고급스러웠습니다. &lt;/p&gt;
&lt;p&gt;저렴한 제품이라곤 해도 그래도 어느정도 가격대가 있긴 한데 나름 만족을 주는 것 같습니다.&lt;/p&gt;
    
    </summary>
    
    
      <category term="개봉기" scheme="https://megapost.io/categories/%EA%B0%9C%EB%B4%89%EA%B8%B0/"/>
    
    
      <category term="캘리퍼" scheme="https://megapost.io/tags/%EC%BA%98%EB%A6%AC%ED%8D%BC/"/>
    
      <category term="버니어캘리퍼스" scheme="https://megapost.io/tags/%EB%B2%84%EB%8B%88%EC%96%B4%EC%BA%98%EB%A6%AC%ED%8D%BC%EC%8A%A4/"/>
    
      <category term="SHAHE" scheme="https://megapost.io/tags/SHAHE/"/>
    
  </entry>
  
  <entry>
    <title>Redshift table lock관련 가이드</title>
    <link href="https://megapost.io/2020/04/09/Redshift-Lock/"/>
    <id>https://megapost.io/2020/04/09/Redshift-Lock/</id>
    <published>2020-04-09T09:20:35.000Z</published>
    <updated>2020-04-09T09:23:23.108Z</updated>
    
    <content type="html"><![CDATA[<h3 id="01-Redshift-Lock-leve"><a href="#01-Redshift-Lock-leve" class="headerlink" title="01. Redshift Lock leve"></a>01. Redshift Lock leve</h3><ul><li>AccessExclusiveLock: ALTER TABLE, DROP 또는 TRUNCATE와 같은 DDL 작업 중에 주로 획득. AccessExclusiveLock은 다른 모든 잠금 시도를 차단.</li><li>AccessShareLock: UNLOAD, SELECT, UPDATE 또는 DELETE 작업 중에 획득. AccessShareLock은 AccessExclusiveLock 시도만 차단. AccessShareLock은 테이블에서 읽기 또는 쓰기를 시도하는 다른 세션을 차단하지 않음.</li><li>ShareRowExclusiveLock: COPY, INSERT, UPDATE 또는 DELETE 작업 중에 획득. ShareRowExclusiveLock은 AccessExclusiveLock 및 기타 ShareRowExclusiveLock 시도를 차단하지만, AccessShareLock 시도는 차단하지 않음.</li></ul><h3 id="02-Blocking-방지-가이드"><a href="#02-Blocking-방지-가이드" class="headerlink" title="02. Blocking 방지 가이드"></a>02. Blocking 방지 가이드</h3><ul><li>ExclusiveLock (X-LOCK)을 유발하는 DDL 구문이 포함된 트랜잭션은 짧게 유지. 혹은 하나의 프로시저에 DDL 구문과 DML 작업이 함께 존재하는 경우, 개별 트랜잭션으로 분리하는 것도 방법.</li><li>대량의 INSERT/UPDATE/DELETE는 스테이징 테이블을 활용한 UPSERT, ALTER TABLE APPEND 구문 사용을 권장.</li><li>쿼리 실행 시간 기준 TOP 10 쿼리나, 아래의 Lock을 유발하는 쿼리의 실행 시간을 줄이기 위한 튜닝 필요<a id="more"></a><h3 id="03-Lock모니터링"><a href="#03-Lock모니터링" class="headerlink" title="03. Lock모니터링"></a>03. Lock모니터링</h3></li><li>아래 쿼리를 실행하여 현재 Lock으로 인한 WAIT이 발생하고 있는지, Blocking을 유발하는 X-LOCK 쿼리가 있는지 확인 가능.</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> </span><br><span class="line">    a.txn_owner</span><br><span class="line">    , a.txn_db</span><br><span class="line">    , a.xid</span><br><span class="line">    , a.pid</span><br><span class="line">    , a.txn_start</span><br><span class="line">    , a.lock_mode</span><br><span class="line">    , a.relation <span class="keyword">as</span> table_id</span><br><span class="line">    , nvl(<span class="keyword">trim</span>(c.<span class="string">"name"</span>),d.relname) <span class="keyword">as</span> tablename</span><br><span class="line">    , a.granted,b.pid <span class="keyword">as</span> blocking_pid </span><br><span class="line">    , <span class="keyword">datediff</span>(s,a.txn_start,<span class="keyword">getdate</span>())/<span class="number">86400</span>||<span class="string">' days'</span>||<span class="keyword">datediff</span>(s,a.txn_start,<span class="keyword">getdate</span>())%<span class="number">86400</span>/<span class="number">3600</span>||<span class="string">' hrs'</span>||<span class="keyword">datediff</span>(s,a.txn_start,<span class="keyword">getdate</span>())%<span class="number">3600</span>/<span class="number">60</span>||<span class="string">' mins'</span>||<span class="keyword">datediff</span>(s,a.txn_start,<span class="keyword">getdate</span>())%<span class="number">60</span>||<span class="string">' secs'</span> <span class="keyword">as</span> txn_duration</span><br><span class="line"><span class="keyword">from</span> </span><br><span class="line">    svv_transactions a <span class="keyword">left</span> <span class="keyword">join</span> (<span class="keyword">select</span> pid,relation,granted <span class="keyword">from</span> pg_locks <span class="keyword">group</span> <span class="keyword">by</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>) b </span><br><span class="line">        <span class="keyword">on</span> a.relation=b.relation <span class="keyword">and</span> a.granted=<span class="string">'f'</span> <span class="keyword">and</span> b.granted=<span class="string">'t'</span> </span><br><span class="line">    <span class="keyword">left</span> <span class="keyword">join</span> (<span class="keyword">select</span> * <span class="keyword">from</span> stv_tbl_perm <span class="keyword">where</span> slice=<span class="number">0</span>) c </span><br><span class="line">        <span class="keyword">on</span> a.relation=c.id </span><br><span class="line">    <span class="keyword">left</span> <span class="keyword">join</span> pg_class d <span class="keyword">on</span> a.relation=d.oid</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">    a.relation <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span>;</span><br></pre></td></tr></table></figure><ul><li>간단히 트랜젝션 상세 정보를 제외한 Lock정보도 확인 가능</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    <span class="keyword">current_time</span></span><br><span class="line">    , c.relname</span><br><span class="line">    , l.database</span><br><span class="line">    , l.transaction</span><br><span class="line">    , l.pid</span><br><span class="line">    , a.usename</span><br><span class="line">    , l.mode</span><br><span class="line">    , l.granted</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">    pg_locks l <span class="keyword">JOIN</span> pg_catalog.pg_class c </span><br><span class="line">        <span class="keyword">ON</span> c.oid = l.relation</span><br><span class="line">    <span class="keyword">JOIN</span> pg_catalog.pg_stat_activity a </span><br><span class="line">        <span class="keyword">ON</span> a.procpid = l.pid</span><br><span class="line"><span class="keyword">WHERE</span> l.pid &lt;&gt; pg_backend_pid()</span><br><span class="line">;</span><br></pre></td></tr></table></figure><p>이후 X-LOCK이 발생한 쿼리를 kill하여 WAIT을 해제할 수 있음</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> pg_terminate_backend(PID);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;01-Redshift-Lock-leve&quot;&gt;&lt;a href=&quot;#01-Redshift-Lock-leve&quot; class=&quot;headerlink&quot; title=&quot;01. Redshift Lock leve&quot;&gt;&lt;/a&gt;01. Redshift Lock leve&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;AccessExclusiveLock: ALTER TABLE, DROP 또는 TRUNCATE와 같은 DDL 작업 중에 주로 획득. AccessExclusiveLock은 다른 모든 잠금 시도를 차단.&lt;/li&gt;
&lt;li&gt;AccessShareLock: UNLOAD, SELECT, UPDATE 또는 DELETE 작업 중에 획득. AccessShareLock은 AccessExclusiveLock 시도만 차단. AccessShareLock은 테이블에서 읽기 또는 쓰기를 시도하는 다른 세션을 차단하지 않음.&lt;/li&gt;
&lt;li&gt;ShareRowExclusiveLock: COPY, INSERT, UPDATE 또는 DELETE 작업 중에 획득. ShareRowExclusiveLock은 AccessExclusiveLock 및 기타 ShareRowExclusiveLock 시도를 차단하지만, AccessShareLock 시도는 차단하지 않음.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;02-Blocking-방지-가이드&quot;&gt;&lt;a href=&quot;#02-Blocking-방지-가이드&quot; class=&quot;headerlink&quot; title=&quot;02. Blocking 방지 가이드&quot;&gt;&lt;/a&gt;02. Blocking 방지 가이드&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;ExclusiveLock (X-LOCK)을 유발하는 DDL 구문이 포함된 트랜잭션은 짧게 유지. 혹은 하나의 프로시저에 DDL 구문과 DML 작업이 함께 존재하는 경우, 개별 트랜잭션으로 분리하는 것도 방법.&lt;/li&gt;
&lt;li&gt;대량의 INSERT/UPDATE/DELETE는 스테이징 테이블을 활용한 UPSERT, ALTER TABLE APPEND 구문 사용을 권장.&lt;/li&gt;
&lt;li&gt;쿼리 실행 시간 기준 TOP 10 쿼리나, 아래의 Lock을 유발하는 쿼리의 실행 시간을 줄이기 위한 튜닝 필요
    
    </summary>
    
    
      <category term="AWS" scheme="https://megapost.io/categories/AWS/"/>
    
      <category term="Redshift" scheme="https://megapost.io/categories/AWS/Redshift/"/>
    
    
      <category term="AWS" scheme="https://megapost.io/tags/AWS/"/>
    
      <category term="Redshift" scheme="https://megapost.io/tags/Redshift/"/>
    
      <category term="Lock" scheme="https://megapost.io/tags/Lock/"/>
    
  </entry>
  
  <entry>
    <title>nvidia JETSON NANO, JetBot AI Kit 개봉기</title>
    <link href="https://megapost.io/2020/04/07/nvidia-JETSON-NANO-Review/"/>
    <id>https://megapost.io/2020/04/07/nvidia-JETSON-NANO-Review/</id>
    <published>2020-04-07T04:34:01.000Z</published>
    <updated>2020-04-07T05:06:23.269Z</updated>
    
    <content type="html"><![CDATA[<p>아이언맨의 자비스와 유사하게 짭비스를 만들어보기 위해 작년 11월에 Jetson Nano, JetBot AI Kit을 구매 했습니다.</p><p>원래 처음 목표는 특정 사람 얼굴을 인식해서 따라다니고, 간단한 명령을 내리면 수행해주는 정도를 만들어보고 싶었는데요, JetBot AI Kit가 불량품이 와서 Jetson Nano만 가지고 놀았는데 얼마후 삼성에서 ‘볼리’라는걸 출시 했네요.</p><p>내가 만들고 싶었던걸 더 작고 이쁘게 만든 제품이 나왔네요 ㅠㅠ</p><p>그래도 만들어볼까 했던 것이 시제품으로 나왔다는 뿌듯함과 역시 내가 생각한건 세상에 존재한다는 진리를 다시한번 깨닫고 개봉기를 작성합니다.</p><p>이건 카메라 켜는것도 귀찮아서 폰카로 찍었었네요 (…)</p><p><img src="/images/jetson_nano/001.jpg" alt=""></p><p>Jetson NANO Developer Kit 입니다. 박스가 생각보다 작았습니다. 크기는 라즈베리파이보다 약간 큰것같네요.</p><a id="more"></a><p><img src="/images/jetson_nano/002.jpg" alt=""></p><p>큰 박스는 JetBot AI Kit입니다. Jetson NANO를 18650배터리 3개를 넣어서 Jetson NANO를 장착해서 사용하는 제품입니다.</p><p><img src="/images/jetson_nano/003.jpg" alt=""></p><p>Kit에 Jetson Nano용 주변기기가 포함되어있습니다. 카메라와 WiFi모듈도 같이 포함되어 있고 블루투스 연결용 동글이도 있어서 블루투스 컨트롤러를 연결해 조종할 수 있습니다. </p><p><img src="/images/jetson_nano/004.jpg" alt=""></p><p>Jetson에 연결할 WiFi 모듈입니다.</p><p><img src="/images/jetson_nano/005.jpg" alt=""></p><p>기타 나머지 조립에 필요한 부품들은 알루미늄 케이스 안에 있습니다.</p><p><img src="/images/jetson_nano/006.jpg" alt=""></p><p>바퀴를 구동하기 위한 모터</p><p><img src="/images/jetson_nano/007.jpg" alt=""></p><p>배터리 및 상태를 확인할 수 있는 작은 LED화면이 보입니다. </p><p><img src="/images/jetson_nano/008.jpg" alt=""></p><p>Jetson NANO 박스를 열어봅니다.<br>작은 상자 안에 고급스러운 비닐에 포장되어 있습니다.</p><p><img src="/images/jetson_nano/009.jpg" alt=""></p><p>박스를 접어서 그 위에 NANO 기판을 올려놓을 수 있다네요. </p><p><img src="/images/jetson_nano/010.jpg" alt=""></p><p>일단 Jetson NANO를 올려놓기 위해 JetBot 조립을 마저 합니다. 아래 WiFi용 안테나를 설치할 수 있는 슬롯도 연결 합니다.</p><p><img src="/images/jetson_nano/011.jpg" alt=""></p><p>실제 Jetson NANO는 저 작은 기판만 있으면 동작이 가능한 것 같습니다. 향후 다른 보드에도 장착이 가능한 구조 같습니다.</p><p><img src="/images/jetson_nano/012.jpg" alt=""></p><p>WiFi 모듈을 장창하고 안테나 선을 연결해줍니다.</p><p>사실 이 사진은 안테나 선을 연결  안하고 Jetson NANO를 장착한 이후 다시 풀어서 찍은 사진입니다. (ㅠㅠ)</p><p><img src="/images/jetson_nano/013.jpg" alt=""></p><p>이렇게 JetBot 위에 올려주고</p><p><img src="/images/jetson_nano/014.jpg" alt=""></p><p>Jetson NANO 모듈을 장착해주면 됩니다.</p><p>안테나선 어쩔..</p><p><img src="/images/jetson_nano/015.jpg" alt=""></p><p>JetBot은 불량이었지만 Jetson은 다행히 잘 작동합니다.</p><p><img src="/images/jetson_nano/016.jpg" alt=""></p><p>구동할때 발열이 심하다고 해서 별도 쿨러를 구매하였습니다.</p><p><img src="/images/jetson_nano/017.jpg" alt=""></p><p>방열판 구멍과 잘 안맞아서 장착에 애를 먹긴 했지만 잘 장착 했습니다.</p><p>처음에 쿨러가 안돌아서 이것도 불량인가 싶었는데 발열이 없을때는 쿨러가 동작을 안하더라구요.</p><p>Jetson에 접속해 명령어 한줄 날려주면 잘 돌아가는지 확인할 수 있습니다.</p><p><img src="/images/jetson_nano/018.jpg" alt=""></p><p>옆에는 Openstack Controller node용으로 샀던.. 나에게 실망감을 안겨준 라떼판다입니다.<br>제가 너무 많은걸 바란 것이겠죠..</p><p>이상 Jetson NANO, JetBot 개봉기였습니다.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;아이언맨의 자비스와 유사하게 짭비스를 만들어보기 위해 작년 11월에 Jetson Nano, JetBot AI Kit을 구매 했습니다.&lt;/p&gt;
&lt;p&gt;원래 처음 목표는 특정 사람 얼굴을 인식해서 따라다니고, 간단한 명령을 내리면 수행해주는 정도를 만들어보고 싶었는데요, JetBot AI Kit가 불량품이 와서 Jetson Nano만 가지고 놀았는데 얼마후 삼성에서 ‘볼리’라는걸 출시 했네요.&lt;/p&gt;
&lt;p&gt;내가 만들고 싶었던걸 더 작고 이쁘게 만든 제품이 나왔네요 ㅠㅠ&lt;/p&gt;
&lt;p&gt;그래도 만들어볼까 했던 것이 시제품으로 나왔다는 뿌듯함과 역시 내가 생각한건 세상에 존재한다는 진리를 다시한번 깨닫고 개봉기를 작성합니다.&lt;/p&gt;
&lt;p&gt;이건 카메라 켜는것도 귀찮아서 폰카로 찍었었네요 (…)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/jetson_nano/001.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Jetson NANO Developer Kit 입니다. 박스가 생각보다 작았습니다. 크기는 라즈베리파이보다 약간 큰것같네요.&lt;/p&gt;
    
    </summary>
    
    
      <category term="개봉기" scheme="https://megapost.io/categories/%EA%B0%9C%EB%B4%89%EA%B8%B0/"/>
    
    
      <category term="Jetson" scheme="https://megapost.io/tags/Jetson/"/>
    
      <category term="JetBot" scheme="https://megapost.io/tags/JetBot/"/>
    
      <category term="nvidia" scheme="https://megapost.io/tags/nvidia/"/>
    
  </entry>
  
  <entry>
    <title>01-Openstack설치를 위한 OS환경 구성(Ubuntu 18.04)</title>
    <link href="https://megapost.io/2020/04/07/01-Openstack-ubuntu/"/>
    <id>https://megapost.io/2020/04/07/01-Openstack-ubuntu/</id>
    <published>2020-04-07T01:35:04.000Z</published>
    <updated>2020-04-07T01:42:41.597Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Openstack-설치를-위한-사전-설정-Ubuntu-18-04"><a href="#Openstack-설치를-위한-사전-설정-Ubuntu-18-04" class="headerlink" title="Openstack 설치를 위한 사전 설정(Ubuntu 18.04)"></a>Openstack 설치를 위한 사전 설정(Ubuntu 18.04)</h1><h2 id="01-Openstack-Compute-node-setting"><a href="#01-Openstack-Compute-node-setting" class="headerlink" title="01. Openstack Compute node setting"></a>01. Openstack Compute node setting</h2><h3 id="1-os파티션-작업"><a href="#1-os파티션-작업" class="headerlink" title="1) os파티션 작업"></a>1) os파티션 작업</h3><p>lvmdiskscan 명령어를 실행해 disk volume 확인</p><figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> lvmdiskscan</span></span><br><span class="line">  /dev/nvme0n1             [      27.25 GiB] </span><br><span class="line">  /dev/loop0               [     &lt;89.09 MiB] </span><br><span class="line">  /dev/ubuntu-vg/ubuntu-lv [       4.00 GiB] </span><br><span class="line">  /dev/nvme2n1             [     465.76 GiB] </span><br><span class="line">  /dev/loop1               [     &lt;91.37 MiB] </span><br><span class="line">  /dev/nvme1n1             [    &lt;476.94 GiB] </span><br><span class="line">  /dev/nvme1n1p1           [     512.00 MiB] </span><br><span class="line">  /dev/nvme1n1p2           [       1.00 GiB] </span><br><span class="line">  /dev/nvme1n1p3           [    &lt;475.44 GiB] LVM physical volume</span><br><span class="line">  1 disk</span><br><span class="line">  7 partitions</span><br><span class="line">  0 LVM physical volume whole disks</span><br><span class="line">  1 LVM physical volume</span><br></pre></td></tr></table></figure><a id="more"></a><p>-l 옵션을 사용하면 연관된 device만 보여줌</p><figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> lvmdiskscan -l</span></span><br><span class="line">  WARNING: only considering LVM devices</span><br><span class="line">  /dev/nvme1n1p3           [    &lt;475.44 GiB] LVM physical volume</span><br><span class="line">  0 LVM physical volume whole disks</span><br><span class="line">  1 LVM physical volume</span><br></pre></td></tr></table></figure><p>총 SSD 용량중에 ubuntu-lv로 4G만 할당 되어 있습니다.</p><figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pvscan</span></span><br><span class="line">  PV /dev/nvme1n1p3   VG ubuntu-vg       lvm2 [475.43 GiB / 471.43 GiB free]</span><br><span class="line">  Total: 1 [475.43 GiB] / in use: 1 [475.43 GiB] / in no VG: 0 [0   ]</span><br><span class="line">  </span><br><span class="line"><span class="meta">$</span><span class="bash"> pvs</span></span><br><span class="line">  PV             VG        Fmt  Attr PSize   PFree  </span><br><span class="line">  /dev/nvme1n1p3 ubuntu-vg lvm2 a--  475.43g 471.43g</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> lvs</span></span><br><span class="line">  LV        VG        Attr       LSize Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  ubuntu-lv ubuntu-vg -wi-ao---- 4.00g  </span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> lvresize -L +471G --resizefs /dev/mapper/ubuntu--vg-ubuntu--lv</span></span><br><span class="line">  Size of logical volume ubuntu-vg/ubuntu-lv changed from 4.00 GiB (1024 extents) to 475.00 GiB (121600 extents).</span><br><span class="line">  Logical volume ubuntu-vg/ubuntu-lv successfully resized.</span><br><span class="line">resize2fs 1.44.1 (24-Mar-2018)</span><br><span class="line">Filesystem at /dev/mapper/ubuntu--vg-ubuntu--lv is mounted on /; on-line resizing required</span><br><span class="line">old_desc_blocks = 1, new_desc_blocks = 60</span><br><span class="line">The filesystem on /dev/mapper/ubuntu--vg-ubuntu--lv is now 124518400 (4k) blocks long.</span><br></pre></td></tr></table></figure><p>lvresize를 통해 남은 용량을 vg에 할당해줍니다.</p><h3 id="2-hostname-및-ip설정"><a href="#2-hostname-및-ip설정" class="headerlink" title="2) hostname 및 ip설정"></a>2) hostname 및 ip설정</h3><p>ubuntu 18.04에선 hostnamectl로 hostname을 변경한 이후 적용이 안되는 경우가 있습니다. 그럴 경우 아래와 같이 호스트 네임 변경 권한을 줘야 합니다.</p><figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vi /etc/cloud/cloud.cfg</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"><span class="meta">#</span><span class="bash"> This will cause the <span class="built_in">set</span>+update hostname module to not operate (<span class="keyword">if</span> <span class="literal">true</span>)</span></span><br><span class="line">preserve_hostname: true # 이 부분을 false -&gt; true로 변경</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> hostnamectl <span class="built_in">set</span>-hostname os_controller</span></span><br></pre></td></tr></table></figure><p>ip주소를 아래와 같은 방법으로 변경</p><figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /etc/netplan/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ls</span></span><br><span class="line">50-cloud-init.yaml</span><br><span class="line"><span class="meta">$</span><span class="bash"> vi 50-cloud-init.yaml</span></span><br><span class="line"></span><br><span class="line">network:</span><br><span class="line">    ethernets:</span><br><span class="line">        ens3:</span><br><span class="line">            addresses:</span><br><span class="line">            - 192.168.1.80/24</span><br><span class="line">            gateway4: 192.168.1.1</span><br><span class="line">            nameservers:</span><br><span class="line">                addresses:</span><br><span class="line">                - 192.168.1.1</span><br><span class="line">    version: 2</span><br></pre></td></tr></table></figure><p>설정할 ip주소를 입력하고 저장한 뒤 적용</p><figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo netplan apply</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Openstack-설치를-위한-사전-설정-Ubuntu-18-04&quot;&gt;&lt;a href=&quot;#Openstack-설치를-위한-사전-설정-Ubuntu-18-04&quot; class=&quot;headerlink&quot; title=&quot;Openstack 설치를 위한 사전 설정(Ubuntu 18.04)&quot;&gt;&lt;/a&gt;Openstack 설치를 위한 사전 설정(Ubuntu 18.04)&lt;/h1&gt;&lt;h2 id=&quot;01-Openstack-Compute-node-setting&quot;&gt;&lt;a href=&quot;#01-Openstack-Compute-node-setting&quot; class=&quot;headerlink&quot; title=&quot;01. Openstack Compute node setting&quot;&gt;&lt;/a&gt;01. Openstack Compute node setting&lt;/h2&gt;&lt;h3 id=&quot;1-os파티션-작업&quot;&gt;&lt;a href=&quot;#1-os파티션-작업&quot; class=&quot;headerlink&quot; title=&quot;1) os파티션 작업&quot;&gt;&lt;/a&gt;1) os파티션 작업&lt;/h3&gt;&lt;p&gt;lvmdiskscan 명령어를 실행해 disk volume 확인&lt;/p&gt;
&lt;figure class=&quot;highlight console&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; lvmdiskscan&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /dev/nvme0n1             [      27.25 GiB] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /dev/loop0               [     &amp;lt;89.09 MiB] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /dev/ubuntu-vg/ubuntu-lv [       4.00 GiB] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /dev/nvme2n1             [     465.76 GiB] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /dev/loop1               [     &amp;lt;91.37 MiB] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /dev/nvme1n1             [    &amp;lt;476.94 GiB] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /dev/nvme1n1p1           [     512.00 MiB] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /dev/nvme1n1p2           [       1.00 GiB] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /dev/nvme1n1p3           [    &amp;lt;475.44 GiB] LVM physical volume&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  1 disk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  7 partitions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  0 LVM physical volume whole disks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  1 LVM physical volume&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Openstack" scheme="https://megapost.io/categories/Openstack/"/>
    
    
      <category term="OpenStack" scheme="https://megapost.io/tags/OpenStack/"/>
    
      <category term="Ubuntu" scheme="https://megapost.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>AWS Redshift Spectrum 정리</title>
    <link href="https://megapost.io/2020/04/07/AWS-Redshift-Spectrum/"/>
    <id>https://megapost.io/2020/04/07/AWS-Redshift-Spectrum/</id>
    <published>2020-04-06T16:01:02.000Z</published>
    <updated>2020-04-06T16:18:10.768Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Redshift-Spectrum-정리"><a href="#Redshift-Spectrum-정리" class="headerlink" title="Redshift Spectrum 정리"></a>Redshift Spectrum 정리</h1><h2 id="01-Redshift-Spectrum-Schma-생성"><a href="#01-Redshift-Spectrum-Schma-생성" class="headerlink" title="01. Redshift Spectrum Schma 생성"></a>01. Redshift Spectrum Schma 생성</h2><ul><li>스팩트럼을 사용하기 위한 Schema 생성<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">external</span> <span class="keyword">schema</span> spectrum </span><br><span class="line"><span class="keyword">from</span> <span class="keyword">data</span> <span class="keyword">catalog</span> </span><br><span class="line"><span class="keyword">database</span> <span class="string">'spectrumdb'</span> </span><br><span class="line">iam_role <span class="string">'arn:aws:iam::123456789012:role/mySpectrumRole'</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">external</span> <span class="keyword">database</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span>;</span><br></pre></td></tr></table></figure><a id="more"></a></li><li>기존에 생성되어있던 Glue 카탈로그를 활용하여 생성도 가능함.<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">external</span> <span class="keyword">schema</span> spectrum_schema <span class="keyword">from</span> <span class="keyword">data</span> <span class="keyword">catalog</span> </span><br><span class="line"><span class="keyword">database</span> <span class="string">'spectrum_db'</span> </span><br><span class="line">iam_role <span class="string">'arn:aws:iam::123456789012:role/MySpectrumRole'</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">external</span> <span class="keyword">database</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span>;</span><br></pre></td></tr></table></figure></li><li>EMR같은 Hive 메타스토어를 사용하는 데이터 카탈로그를 참조하는 외부스키마 생성<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">external</span> <span class="keyword">schema</span> hive_schema</span><br><span class="line"><span class="keyword">from</span> hive metastore</span><br><span class="line"><span class="keyword">database</span> <span class="string">'hive_db'</span></span><br><span class="line">uri <span class="string">'172.10.10.10'</span> port <span class="number">99</span></span><br><span class="line">iam_role <span class="string">'arn:aws:iam::123456789012:role/MySpectrumRole'</span></span><br></pre></td></tr></table></figure><h2 id="02-external-table-생성"><a href="#02-external-table-생성" class="headerlink" title="02. external table 생성"></a>02. external table 생성</h2></li><li>데이터가 있는 S3 버킷 경로를 지정하여 external table 생성<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">external</span> <span class="keyword">table</span> spectrum.sales(</span><br><span class="line">salesid <span class="built_in">integer</span>,</span><br><span class="line">listid <span class="built_in">integer</span>,</span><br><span class="line">sellerid <span class="built_in">integer</span>,</span><br><span class="line">buyerid <span class="built_in">integer</span>,</span><br><span class="line">eventid <span class="built_in">integer</span>,</span><br><span class="line">dateid <span class="built_in">smallint</span>,</span><br><span class="line">qtysold <span class="built_in">smallint</span>,</span><br><span class="line">pricepaid <span class="built_in">decimal</span>(<span class="number">8</span>,<span class="number">2</span>),</span><br><span class="line">commission <span class="built_in">decimal</span>(<span class="number">8</span>,<span class="number">2</span>),</span><br><span class="line">saletime <span class="built_in">timestamp</span>)</span><br><span class="line"><span class="keyword">row</span> <span class="keyword">format</span> <span class="keyword">delimited</span></span><br><span class="line"><span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'\t'</span></span><br><span class="line"><span class="keyword">stored</span> <span class="keyword">as</span> textfile</span><br><span class="line">location <span class="string">'s3:// &lt;&lt; bucket 경로 &gt;&gt;'</span></span><br><span class="line"><span class="keyword">table</span> properties (<span class="string">'numRows'</span>=<span class="string">'172000'</span>);</span><br></pre></td></tr></table></figure></li><li>parquet file 경로를 지정하여 external table 생성<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">external</span> <span class="keyword">table</span> spectrum.sales(</span><br><span class="line">salesid <span class="built_in">integer</span>,</span><br><span class="line">listid <span class="built_in">integer</span>,</span><br><span class="line">sellerid <span class="built_in">integer</span>,</span><br><span class="line">buyerid <span class="built_in">integer</span>,</span><br><span class="line">eventid <span class="built_in">integer</span>,</span><br><span class="line">dateid <span class="built_in">smallint</span>,</span><br><span class="line">qtysold <span class="built_in">smallint</span>,</span><br><span class="line">pricepaid <span class="built_in">decimal</span>(<span class="number">8</span>,<span class="number">2</span>),</span><br><span class="line">commission <span class="built_in">decimal</span>(<span class="number">8</span>,<span class="number">2</span>),</span><br><span class="line">saletime <span class="built_in">timestamp</span>)</span><br><span class="line"><span class="keyword">row</span> <span class="keyword">format</span> <span class="keyword">delimited</span></span><br><span class="line"><span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'\t'</span></span><br><span class="line"><span class="keyword">stored</span> <span class="keyword">as</span> parquet</span><br><span class="line">location <span class="string">'s3:// &lt;&lt; bucket 경로 &gt;&gt;'</span></span><br></pre></td></tr></table></figure><h2 id="03-외부-테이블-파티셔닝"><a href="#03-외부-테이블-파티셔닝" class="headerlink" title="03. 외부 테이블 파티셔닝"></a>03. 외부 테이블 파티셔닝</h2></li><li>단일 파티션 분할<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> spectrum.sales_part <span class="keyword">add</span></span><br><span class="line"><span class="keyword">partition</span>(saledate=<span class="string">'2008-01-01'</span>) </span><br><span class="line">location <span class="string">'s3://awssampledbuswest2/tickit/spectrum/sales_partition/saledate=2008-01/'</span></span><br><span class="line"><span class="keyword">partition</span>(saledate=<span class="string">'2008-02-01'</span>) </span><br><span class="line">location <span class="string">'s3://awssampledbuswest2/tickit/spectrum/sales_partition/saledate=2008-02/'</span>;</span><br></pre></td></tr></table></figure></li><li>여러 파티션 분할<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">external</span> <span class="keyword">table</span> spectrum.sales_event(</span><br><span class="line">salesid <span class="built_in">integer</span>,</span><br><span class="line">listid <span class="built_in">integer</span>,</span><br><span class="line">sellerid <span class="built_in">integer</span>,</span><br><span class="line">buyerid <span class="built_in">integer</span>,</span><br><span class="line">eventid <span class="built_in">integer</span>,</span><br><span class="line">dateid <span class="built_in">smallint</span>,</span><br><span class="line">qtysold <span class="built_in">smallint</span>,</span><br><span class="line">pricepaid <span class="built_in">decimal</span>(<span class="number">8</span>,<span class="number">2</span>),</span><br><span class="line">commission <span class="built_in">decimal</span>(<span class="number">8</span>,<span class="number">2</span>),</span><br><span class="line">saletime <span class="built_in">timestamp</span>)</span><br><span class="line">partitioned <span class="keyword">by</span> (salesmonth <span class="built_in">char</span>(<span class="number">10</span>), <span class="keyword">event</span> <span class="built_in">integer</span>)</span><br><span class="line"><span class="keyword">row</span> <span class="keyword">format</span> <span class="keyword">delimited</span></span><br><span class="line"><span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'|'</span></span><br><span class="line"><span class="keyword">stored</span> <span class="keyword">as</span> textfile</span><br><span class="line">location <span class="string">'s3://awssampledbuswest2/tickit/spectrum/salesevent/'</span></span><br><span class="line"><span class="keyword">table</span> properties (<span class="string">'numRows'</span>=<span class="string">'172000'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 파티션을 추가하려면 alter table을 이용</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> spectrum.sales_event <span class="keyword">add</span></span><br><span class="line"><span class="keyword">partition</span>(salesmonth=<span class="string">'2008-01'</span>, <span class="keyword">event</span>=<span class="string">'101'</span>) </span><br><span class="line">location <span class="string">'s3://awssampledbuswest2/tickit/spectrum/salesevent/salesmonth=2008-01/event=101/'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">partition</span>(salesmonth=<span class="string">'2008-01'</span>, <span class="keyword">event</span>=<span class="string">'102'</span>) </span><br><span class="line">location <span class="string">'s3://awssampledbuswest2/tickit/spectrum/salesevent/salesmonth=2008-01/event=102/'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">partition</span>(salesmonth=<span class="string">'2008-01'</span>, <span class="keyword">event</span>=<span class="string">'103'</span>) </span><br><span class="line">location <span class="string">'s3://awssampledbuswest2/tickit/spectrum/salesevent/salesmonth=2008-01/event=103/'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">partition</span>(salesmonth=<span class="string">'2008-02'</span>, <span class="keyword">event</span>=<span class="string">'101'</span>) </span><br><span class="line">location <span class="string">'s3://awssampledbuswest2/tickit/spectrum/salesevent/salesmonth=2008-02/event=101/'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">partition</span>(salesmonth=<span class="string">'2008-02'</span>, <span class="keyword">event</span>=<span class="string">'102'</span>) </span><br><span class="line">location <span class="string">'s3://awssampledbuswest2/tickit/spectrum/salesevent/salesmonth=2008-02/event=102/'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">partition</span>(salesmonth=<span class="string">'2008-02'</span>, <span class="keyword">event</span>=<span class="string">'103'</span>) </span><br><span class="line">location <span class="string">'s3://awssampledbuswest2/tickit/spectrum/salesevent/salesmonth=2008-02/event=103/'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">partition</span>(salesmonth=<span class="string">'2008-03'</span>, <span class="keyword">event</span>=<span class="string">'101'</span>) </span><br><span class="line">location <span class="string">'s3://awssampledbuswest2/tickit/spectrum/salesevent/salesmonth=2008-03/event=101/'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">partition</span>(salesmonth=<span class="string">'2008-03'</span>, <span class="keyword">event</span>=<span class="string">'102'</span>) </span><br><span class="line">location <span class="string">'s3://awssampledbuswest2/tickit/spectrum/salesevent/salesmonth=2008-03/event=102/'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">partition</span>(salesmonth=<span class="string">'2008-03'</span>, <span class="keyword">event</span>=<span class="string">'103'</span>) </span><br><span class="line">location <span class="string">'s3://awssampledbuswest2/tickit/spectrum/salesevent/salesmonth=2008-03/event=103/'</span>;</span><br></pre></td></tr></table></figure></li></ul><h2 id="04-Select-data"><a href="#04-Select-data" class="headerlink" title="04. Select data"></a>04. Select data</h2><ul><li>가상 열 조회<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> <span class="string">"$path"</span>, <span class="string">"$size"</span></span><br><span class="line"><span class="keyword">from</span> spectrum.sales_part;</span><br><span class="line"></span><br><span class="line"> $path                                 | $size</span><br><span class="line"><span class="comment">---------------------------------------+-------</span></span><br><span class="line">s3://awssampledbuswest2/tickit/spectrum/sales_partition/saledate=2008-01/ |  1616</span><br><span class="line">s3://awssampledbuswest2/tickit/spectrum/sales_partition/saledate=2008-02/ |  1444</span><br><span class="line">s3://awssampledbuswest2/tickit/spectrum/sales_partition/saledate=2008-03/ |  1644</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Redshift-Spectrum-정리&quot;&gt;&lt;a href=&quot;#Redshift-Spectrum-정리&quot; class=&quot;headerlink&quot; title=&quot;Redshift Spectrum 정리&quot;&gt;&lt;/a&gt;Redshift Spectrum 정리&lt;/h1&gt;&lt;h2 id=&quot;01-Redshift-Spectrum-Schma-생성&quot;&gt;&lt;a href=&quot;#01-Redshift-Spectrum-Schma-생성&quot; class=&quot;headerlink&quot; title=&quot;01. Redshift Spectrum Schma 생성&quot;&gt;&lt;/a&gt;01. Redshift Spectrum Schma 생성&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;스팩트럼을 사용하기 위한 Schema 생성&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;external&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;schema&lt;/span&gt; spectrum &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;catalog&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;spectrumdb&#39;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;iam_role &lt;span class=&quot;string&quot;&gt;&#39;arn:aws:iam::123456789012:role/mySpectrumRole&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;external&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exists&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="AWS" scheme="https://megapost.io/categories/AWS/"/>
    
      <category term="Redshift" scheme="https://megapost.io/categories/AWS/Redshift/"/>
    
    
      <category term="AWS" scheme="https://megapost.io/tags/AWS/"/>
    
      <category term="Redshift" scheme="https://megapost.io/tags/Redshift/"/>
    
      <category term="Spectrum" scheme="https://megapost.io/tags/Spectrum/"/>
    
      <category term="parquet" scheme="https://megapost.io/tags/parquet/"/>
    
  </entry>
  
  <entry>
    <title>TB3000A (썬더볼트3 NVMe 외장 케이스) 개봉기</title>
    <link href="https://megapost.io/2020/03/25/TB3000A/"/>
    <id>https://megapost.io/2020/03/25/TB3000A/</id>
    <published>2020-03-25T02:12:18.000Z</published>
    <updated>2020-04-06T15:54:07.256Z</updated>
    
    <content type="html"><![CDATA[<p>기존 데스크탑은 Openstack 설치에 활용하기 위해 새로 구입한 맥북에 Windows를 설치 하려고 하던 중, 왠지 맥북에 Windows공간을 만드는 것이 아까워서 외장하드에 설치해볼까 해서 구매한 제품입니다.</p><p>결론적으론 아직도 설치를 못하고 삽질 중인데 ㅠㅠ 언젠간 해결이 됐으면 좋겠습니다. </p><p>(맥북프로 16인치 이후 버전부터 드라이버가 이상한건지 구성이 잘 안되네요.. 혹시 성공하신분 있으시면 알려주세요 ㅠㅠ)</p><a id="more"></a><p><img src="/images/20200325-TB3000A/001.jpg" alt=""></p><p>삼성 970Evo와 외장 케이스입니다. 썬더볼트 타입이기 때문에 성능은 잘 나오겠죠? 하지만 usb-c와 호환은 안됍니다.</p><p><img src="/images/20200325-TB3000A/002.jpg" alt=""></p><p>외장 케이스 박스 오픈…</p><p><img src="/images/20200325-TB3000A/003.jpg" alt=""></p><p>구성품은 파우치, 케이블, 외장케이스, 드라이버, 그리고 허술해보이는 방열판과 써멀패드가 들어있었습니다.</p><p><img src="/images/20200325-TB3000A/004.jpg" alt=""></p><p>드라이버는 옛날에 안경 볼트 조이라고 주던 그 드라이버입니다.<br>손에 맞지도 않고 품질도 별로라 바로 버려버리고 집에 있는 드라이버로 작업했네요.</p><p><img src="/images/20200325-TB3000A/005.jpg" alt=""></p><p>뚜껑을 편하게 열 수 있도록 스티커가 붙어있습니다.</p><p><img src="/images/20200325-TB3000A/006.jpg" alt=""></p><p>이건 보고 경악을 금치 못했는데, 고정할 수 있게 볼트를 조이는곳어 없이 그냥 덮으라는건가?</p><p><img src="/images/20200325-TB3000A/007.jpg" alt=""></p><p>ssd 개봉 모습입니다. 심플합니다.</p><p><img src="/images/20200325-TB3000A/008.jpg" alt=""></p><p>외장하드 케이스 뚜껑을 열어서</p><p><img src="/images/20200325-TB3000A/009.jpg" alt=""></p><p>SSD를 잘 넣고</p><p><img src="/images/20200325-TB3000A/010.jpg" alt=""></p><p>누른다음 위에 고정되도록 볼트만 조여주면 장착이 끝납니다.</p><p><img src="/images/20200325-TB3000A/011.jpg" alt=""></p><p>뚜껑을 덮기 전 잘 작동하는지 확인을 해보고..</p><p><img src="/images/20200325-TB3000A/012.jpg" alt=""></p><p>허술한 껌딱지를 붙여주고</p><p><img src="/images/20200325-TB3000A/013.jpg" alt=""></p><p>허술한 방열판을 그 위에 올려줍니다.</p><p>혹시나 방열판이 보드쪽에 밀려서 합선이 일어날까 걱정했는데 케이스 뚜껑을 덮으면 그런일은 일어나지 않을 것 같습니다.</p><p>근데 너무 허술합니다.</p><p><img src="/images/20200325-TB3000A/014.jpg" alt=""></p><p>케이스 뚜껑을 덮고 고정을 위해 볼트를 조여줍니다. </p><p>손 끝에 모든 감각을 동원해 토크 조절을 해야합니다. 조금이라도 힘을 더 줘서 돌리면 나사가 헛돌게 됩니다.</p><p>성능은 잘 나오는 것 같지만 생각보단 제품이 너무 허술해서 실망했네요.</p><p>이상 개봉기였습니다.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;기존 데스크탑은 Openstack 설치에 활용하기 위해 새로 구입한 맥북에 Windows를 설치 하려고 하던 중, 왠지 맥북에 Windows공간을 만드는 것이 아까워서 외장하드에 설치해볼까 해서 구매한 제품입니다.&lt;/p&gt;
&lt;p&gt;결론적으론 아직도 설치를 못하고 삽질 중인데 ㅠㅠ 언젠간 해결이 됐으면 좋겠습니다. &lt;/p&gt;
&lt;p&gt;(맥북프로 16인치 이후 버전부터 드라이버가 이상한건지 구성이 잘 안되네요.. 혹시 성공하신분 있으시면 알려주세요 ㅠㅠ)&lt;/p&gt;
    
    </summary>
    
    
      <category term="개봉기" scheme="https://megapost.io/categories/%EA%B0%9C%EB%B4%89%EA%B8%B0/"/>
    
    
      <category term="TB3000A" scheme="https://megapost.io/tags/TB3000A/"/>
    
      <category term="Thunderbolt3" scheme="https://megapost.io/tags/Thunderbolt3/"/>
    
      <category term="nvme" scheme="https://megapost.io/tags/nvme/"/>
    
  </entry>
  
  <entry>
    <title>Microsoft Ergonomic Mouse 개봉기</title>
    <link href="https://megapost.io/2020/03/12/Microsoft-Ergonomic/"/>
    <id>https://megapost.io/2020/03/12/Microsoft-Ergonomic/</id>
    <published>2020-03-12T13:18:27.000Z</published>
    <updated>2020-03-25T05:47:56.566Z</updated>
    
    <content type="html"><![CDATA[<h2 id="마이크로소프트-에고노믹-마우스-개봉기"><a href="#마이크로소프트-에고노믹-마우스-개봉기" class="headerlink" title="마이크로소프트 에고노믹 마우스 개봉기"></a>마이크로소프트 에고노믹 마우스 개봉기</h2><p>기존에 로지텍 MX Master를 사용중이었는데 마우스가 원인인지 아닌지 모르겠지만 요즘따라 너무 손목이 아파서 고민하던 와중 마이크로소프트 에고노믹 마우스가 평이 매우 좋아서 구매를 하게 되었습니다.</p><p>에고노믹 마우스도 두가지가 있던데 둥글둥글한 스컬프트 에고노믹 마우스가 있고 이번에 구매한 에고노믹 마우스가 있었습니다. 가격은 좀 나가지만 그래도 최근에 나온게 좋겠지 싶어서 최신상품으로 구매했습니다.</p><a id="more"></a><p><img src="/images/20200312-Microsoft-Ergonomic/001.jpg" alt=""></p><p>맨 처음 박스를 꺼낸 느낌은 “가볍다!” 였습니다. 박스 무게를 포함해도 MX Master보다 가벼웠던 것 같습니다. </p><p><img src="/images/20200312-Microsoft-Ergonomic/002.jpg" alt=""></p><p>간편하게 뜯을 수 있도록 포장을 해놓은것이 뭔가 고급스러워(?) 보였습니다.</p><p><img src="/images/20200312-Microsoft-Ergonomic/003.jpg" alt=""></p><p>패키지를 열면 마우스와 마우스가 잘 고정될 수 있도록 윗부분에 박스로 마감을 해놓은 모습이 보입니다.<br>박스 윗부분에 뭔가 들어있나 싶었는데 아무것도 없더라구요..</p><p><img src="/images/20200312-Microsoft-Ergonomic/004.jpg" alt=""></p><p>무광 재질이 정말 고급스러워 보입니다. 마우스는 정말 심플합니다. 그래서 더 마음에 드네요.</p><p><img src="/images/20200312-Microsoft-Ergonomic/006.jpg" alt=""></p><p>마우스를 박스에서 꺼낼때도 “가볍다.. 진짜…”. 맨날 무거운 마우스만 사용해서 더 그렇게 느꼈던 것 같습니다. 아무래도 유선이기 때문에 배터리같은게 없으니 더 그럴만도 합니다.</p><p><img src="/images/20200312-Microsoft-Ergonomic/007.jpg" alt=""></p><p>휠부분은 금속 재질로 되어있어서 고급스러워보입니다. </p><p><img src="/images/20200312-Microsoft-Ergonomic/008.jpg" alt=""></p><p>센서 부분은 파란색으로 빛납니다.<br>블루트랙 센서가 여러가지 재질의 바닥에서 사용이 가능하다고 하던데 시험삼에 핸드폰 액정 위에 올려놓고 써봐도 마우스가 튀거나 하지 않았습니다. 패드없이 아무곳에서나 사용해도 크게 불편함은 없을 것 같습니다.</p><p>무엇보다 가벼워서 손이 너무 편한 느낌입니다.</p><p>마우스도 바꿨으니 지긋지긋한 손목통증이 좀 없어졌으면 좋겠습니다.</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;마이크로소프트-에고노믹-마우스-개봉기&quot;&gt;&lt;a href=&quot;#마이크로소프트-에고노믹-마우스-개봉기&quot; class=&quot;headerlink&quot; title=&quot;마이크로소프트 에고노믹 마우스 개봉기&quot;&gt;&lt;/a&gt;마이크로소프트 에고노믹 마우스 개봉기&lt;/h2&gt;&lt;p&gt;기존에 로지텍 MX Master를 사용중이었는데 마우스가 원인인지 아닌지 모르겠지만 요즘따라 너무 손목이 아파서 고민하던 와중 마이크로소프트 에고노믹 마우스가 평이 매우 좋아서 구매를 하게 되었습니다.&lt;/p&gt;
&lt;p&gt;에고노믹 마우스도 두가지가 있던데 둥글둥글한 스컬프트 에고노믹 마우스가 있고 이번에 구매한 에고노믹 마우스가 있었습니다. 가격은 좀 나가지만 그래도 최근에 나온게 좋겠지 싶어서 최신상품으로 구매했습니다.&lt;/p&gt;
    
    </summary>
    
    
      <category term="개봉기" scheme="https://megapost.io/categories/%EA%B0%9C%EB%B4%89%EA%B8%B0/"/>
    
    
      <category term="Microsoft" scheme="https://megapost.io/tags/Microsoft/"/>
    
      <category term="Mouse" scheme="https://megapost.io/tags/Mouse/"/>
    
      <category term="Ergonomic" scheme="https://megapost.io/tags/Ergonomic/"/>
    
  </entry>
  
  <entry>
    <title>Github blog 시작을 위한 Hexo 설정(Ubuntu 18.04 기준)</title>
    <link href="https://megapost.io/2020/03/08/hexo-setting/"/>
    <id>https://megapost.io/2020/03/08/hexo-setting/</id>
    <published>2020-03-07T15:31:15.000Z</published>
    <updated>2020-03-25T05:48:11.794Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HEXO-설치과정"><a href="#HEXO-설치과정" class="headerlink" title="HEXO 설치과정"></a><strong>HEXO 설치과정</strong></h2><p>Github blog를 시작하기 위해 처음에는 Jekyll을 사용하려고 했으나 생각보다(?) 사용방법이 불편했고 테마도 마음에 들지않아 알아보던 중 Hexo를 많이 사용하는 것 같아서 이번 기회에 설정을 해봤습니다.</p><hr><h3 id="01-Hexo설치"><a href="#01-Hexo설치" class="headerlink" title="01. Hexo설치"></a><strong>01. Hexo설치</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-cli -g</span></span><br><span class="line">loadDep:fsevents → resolv ▌ ╢████████████████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░╟</span><br><span class="line">WARN engine fsevents@2.1.2: wanted: &#123;"node":"^8.16.0 || ^10.6.0 || &gt;=11.0.0"&#125; (current: &#123;"node":"8.1/usr/local/bin/hexo -&gt; /usr/local/lib/node_modules/hexo-cli/bin/hexo</span><br><span class="line">/usr/local/lib</span><br><span class="line">└── hexo-cli@3.1.0</span><br><span class="line"></span><br><span class="line">npm WARN optional Skipping failed optional dependency /hexo-cli/chokidar/fsevents:</span><br><span class="line">npm WARN notsup Not compatible with your operating system or architecture: fsevents@2.1.2</span><br></pre></td></tr></table></figure><a id="more"></a><p>nodejs 버전이 낮아서 그런지 경고가 나오는 것 같아서 확인해봤습니다.</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> node --version</span></span><br><span class="line">v8.10.0</span><br></pre></td></tr></table></figure><p>8.16.0 이상이 권장인 것 같아 nodejs 버전을 업그레이드 했습니다. 일단 기존 설치되어 있는 nodejs를 삭제하고</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> apt purge --auto-remove nodejs</span></span><br></pre></td></tr></table></figure><p>최신 nodejs로 업그레이드</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt install -y nodejs</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> node --version</span></span><br><span class="line">v12.16.1</span><br></pre></td></tr></table></figure><p>다시한번 Hexo-cli 설치</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-cli -g --no-optional</span></span><br><span class="line">/usr/bin/hexo -&gt; /usr/lib/node_modules/hexo-cli/bin/hexo</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.1.2 (node_modules/hexo-cli/node_modules/chokidar/node_modules/fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.1.2: wanted &#123;"os":"darwin","arch":"any"&#125; (current: &#123;"os":"linux","arch":"x64"&#125;)</span><br><span class="line"></span><br><span class="line">+ hexo-cli@3.1.0</span><br><span class="line">added 74 packages from 319 contributors in 11.895s</span><br></pre></td></tr></table></figure><p>version에 의한 경고는 사라졌습니다.</p><hr><h3 id="02-기본-프로젝트-생성"><a href="#02-기본-프로젝트-생성" class="headerlink" title="02. 기본 프로젝트 생성"></a><strong>02. 기본 프로젝트 생성</strong></h3><p>hexo init 으로 기본 프로젝트 생성합니다. (root계정이라도 npm install 할때 sudo 를 앞에 붙여줘야 정상적으로 설치가 가능했습니다.. 이것때문에 삽질을 좀;)</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo init project_name</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> project_name</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo npm install</span></span><br></pre></td></tr></table></figure><hr><h3 id="03-생성된-블로그-로컬에서-테스트"><a href="#03-생성된-블로그-로컬에서-테스트" class="headerlink" title="03. 생성된 블로그 로컬에서 테스트"></a><strong>03. 생성된 블로그 로컬에서 테스트</strong></h3><p>로컬에서 서버를 띄워 만들어진 블로그를 확인해볼 수 있습니다.</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo server</span></span><br></pre></td></tr></table></figure><p>서버가 구동되면 브라우저를 통해 접속해볼 수 있습니다.</p><ul><li><a href="http://localhost:4000">http://localhost:4000</a></li></ul><hr><h3 id="04-github-자동-배포를-위한-설정"><a href="#04-github-자동-배포를-위한-설정" class="headerlink" title="04. github 자동 배포를 위한 설정"></a><strong>04. github 자동 배포를 위한 설정</strong></h3><p>_config.yaml 파일을 열어 아래 설정을 작성하고 저장합니다.</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: &lt;&lt;배포할 자신의 github 주소&gt;&gt;</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>deploy plugin 설치</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo npm install hexo-deployer-git --save</span></span><br></pre></td></tr></table></figure><p>github에 배포. -g옵션을 줘야 내부 소스를 통해 리소스를 생성해 배포합니다.</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo deploy -g</span></span><br></pre></td></tr></table></figure><p>deploy를 통해 배포를 했으나 페이지가 없데이트 되지 않을 경우 clean 이후 다시 배포를 해봅니다.</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo clean</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo deploy -g</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;HEXO-설치과정&quot;&gt;&lt;a href=&quot;#HEXO-설치과정&quot; class=&quot;headerlink&quot; title=&quot;HEXO 설치과정&quot;&gt;&lt;/a&gt;&lt;strong&gt;HEXO 설치과정&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;Github blog를 시작하기 위해 처음에는 Jekyll을 사용하려고 했으나 생각보다(?) 사용방법이 불편했고 테마도 마음에 들지않아 알아보던 중 Hexo를 많이 사용하는 것 같아서 이번 기회에 설정을 해봤습니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;01-Hexo설치&quot;&gt;&lt;a href=&quot;#01-Hexo설치&quot; class=&quot;headerlink&quot; title=&quot;01. Hexo설치&quot;&gt;&lt;/a&gt;&lt;strong&gt;01. Hexo설치&lt;/strong&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; npm install hexo-cli -g&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;loadDep:fsevents → resolv ▌ ╢████████████████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░╟&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WARN engine fsevents@2.1.2: wanted: &amp;#123;&quot;node&quot;:&quot;^8.16.0 || ^10.6.0 || &amp;gt;=11.0.0&quot;&amp;#125; (current: &amp;#123;&quot;node&quot;:&quot;8.1/usr/local/bin/hexo -&amp;gt; /usr/local/lib/node_modules/hexo-cli/bin/hexo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/usr/local/lib&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└── hexo-cli@3.1.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm WARN optional Skipping failed optional dependency /hexo-cli/chokidar/fsevents:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm WARN notsup Not compatible with your operating system or architecture: fsevents@2.1.2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://megapost.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://megapost.io/tags/Hexo/"/>
    
      <category term="nodejs" scheme="https://megapost.io/tags/nodejs/"/>
    
  </entry>
  
</feed>
